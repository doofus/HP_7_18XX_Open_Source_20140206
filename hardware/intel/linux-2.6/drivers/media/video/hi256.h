/*
 * Support for hi256 Camera Sensor.
 *
 * Copyright (c) 2010 Intel Corporation. All Rights Reserved.
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License version
 * 2 as published by the Free Software Foundation.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA
 * 02110-1301, USA.
 *
 */

#ifndef __A1040_H__
#define __A1040_H__

#include <linux/kernel.h>
#include <linux/types.h>
#include <linux/i2c.h>
#include <linux/delay.h>
#include <linux/videodev2.h>
#include <linux/spinlock.h>
#include <media/v4l2-subdev.h>
#include <media/v4l2-device.h>
#include <media/v4l2-chip-ident.h>
#include <linux/v4l2-mediabus.h>
#include <media/media-entity.h>
#include <linux/atomisp_platform.h>
#include <linux/atomisp.h>

#define V4L2_IDENT_OV7692 261

#define FULLINISUPPORT


#define REG_COM7	0x12	/* Control 7 */
#define   COM7_RESET	  0x80	  /* Register reset */

#define HI256_MIDH		0x1C
#define HI256_MIDL		0x1D
#define HI256_PIDH		0x04	/* Product ID REG*/
#define HI256_PIDL		0x0B	/* Product ID */
#define REG_MVFP                  0x0c  /*  flip */
#define   MVFP_FLIP	        0x80	  /* Vertical flip */
#define   MVFP_MLIP	        0x40	  /* Mirr flip */

 #define HI256_FLICKER_MODE_50HZ   	1
#define HI256_FLICKER_MODE_60HZ	        2
struct regval_list {
	unsigned char reg_num;
	unsigned char value;
};

#define SENSOR_DETECTED		1
#define SENSOR_NOT_DETECTED	0

#define I2C_RETRY_COUNT		5
#define MSG_LEN_OFFSET		2
#define MAX_FMTS		1

#ifndef MIPI_CONTROL
#define MIPI_CONTROL		0x3400	/* MIPI_Control */
#endif

/* System control register for Aptina A-1040SOC*/
#define HI256_PID		0x0

/* MT9P111_DEVICE_ID */
#define HI256_MOD_ID		0x2481

/* ulBPat; */

/*
 * focal length bits definition:
 * bits 31-16: numerator, bits 15-0: denominator
 */
#define HI256_FOCAL_LENGTH_DEFAULT 0xD00064

/*
 * current f-number bits definition:
 * bits 31-16: numerator, bits 15-0: denominator
 */
#define HI256_F_NUMBER_DEFAULT 0x18000a
#define HI256_FOCAL_LENGTH_NUM	208	/*2.08mm*/
#define HI256_FOCAL_LENGTH_DEM	100
#define HI256_F_NUMBER_DEFAULT_NUM	24
#define HI256_F_NUMBER_DEM	10
#define HI256_WAIT_STAT_TIMEOUT	100

/*
 * f-number range bits definition:
 * bits 31-24: max f-number numerator
 * bits 23-16: max f-number denominator
 * bits 15-8: min f-number numerator
 * bits 7-0: min f-number denominator
 */
#define HI256_F_NUMBER_RANGE 0x180a180a

/* Supported resolutions */
enum {
	HI256_RES_QCIF,
	HI256_RES_QVGA,
	HI256_RES_CIF,
	HI256_RES_VGA,
};
#define HI256_RES_VGA_SIZE_H		640
#define HI256_RES_VGA_SIZE_V		480
#define HI256_RES_CIF_SIZE_H		        352
#define HI256_RES_CIF_SIZE_V		        288
#define HI256_RES_QVGA_SIZE_H		320
#define HI256_RES_QVGA_SIZE_V		240
#define HI256_RES_QCIF_SIZE_H		176
#define HI256_RES_QCIF_SIZE_V		144

/* completion status polling requirements, usage based on Aptina .INI Rev2 */
enum poll_reg {
	NO_POLLING,
	PRE_POLLING,
	POST_POLLING,
};
/* Supported resolutions */
enum {
	MT9M114_RES_QCIF,
	MT9M114_RES_CIF,
	MT9M114_RES_QVGA,
	MT9M114_RES_VGA,
};





struct hi256_device {
	struct v4l2_subdev sd;
	struct media_pad pad;
	struct v4l2_mbus_framefmt format;

	struct camera_sensor_platform_data *platform_data;
	int real_model_id;
	int nctx;
	int power;

	unsigned int bus_width;
	unsigned int mode;
	unsigned int field_inv;
	unsigned int field_sel;
	unsigned int ycseq;
	unsigned int conv422;
	unsigned int bpat;
	unsigned int hpol;
	unsigned int vpol;
	unsigned int edge;
	unsigned int bls;
	unsigned int gamma;
	unsigned int cconv;
	unsigned int res;
	unsigned int dwn_sz;
	unsigned int blc;
	unsigned int agc;
	unsigned int awb;
	unsigned int aec;
	/* extention SENSOR version 2 */
	unsigned int cie_profile;

	/* extention SENSOR version 3 */
	unsigned int flicker_freq;

	/* extension SENSOR version 4 */
	unsigned int smia_mode;
	unsigned int mipi_mode;

	/* Add name here to load shared library */
	unsigned int type;

	/*Number of MIPI lanes*/
	unsigned int mipi_lanes;
	char name[32];

	u8 lightfreq;
};

struct hi256_format_struct {
	u8 *desc;
	u32 pixelformat;
	struct regval_list *regs;
};

struct hi256_res_struct {
	u8 *desc;
	int res;
	int width;
	int height;
	int fps;
	int skip_frames;
	bool used;
	struct regval_list *regs;
};

struct hi256_control {
	struct v4l2_queryctrl qc;
	int (*query)(struct v4l2_subdev *sd, s32 *value);
	int (*tweak)(struct v4l2_subdev *sd, int value);
};

#define HI256_MAX_WRITE_BUF_SIZE	32
struct hi256_write_buffer {
	u16 addr;
	u8 data[HI256_MAX_WRITE_BUF_SIZE];
};

struct hi256_write_ctrl {
	int index;
	struct hi256_write_buffer buffer;
};

/*
 * Modes supported by the hi256 driver.
 * Please, keep them in ascending order.
 */
static struct hi256_res_struct hi256_res[] = {
	{
	.desc	= "QCIF",
	.res	= HI256_RES_QCIF,
	.width	= 176,
	.height	= 144,
	.fps	= 30,
	.used	= 0,
	.regs	= NULL,
	.skip_frames = 3,
	},
	{
	.desc	= "QVGA",
	.res	= HI256_RES_QVGA,
	.width	= 320,
	.height	= 240,
	.fps	= 30,
	.used	= 0,
	.regs	= NULL,
	.skip_frames = 5,
	},
	{
	.desc	= "CIF",
	.res	= HI256_RES_CIF,
	.width	= 352,
	.height	= 288,
	.fps	= 30,
	.used	= 0,
	.regs	= NULL,
	.skip_frames = 1,
	},
	{
	.desc	= "VGA",
	.res	= HI256_RES_VGA,
	.width	= 640,
	.height	= 480,
	.fps	= 30,
	.used	= 0,
	.regs	= NULL,
	.skip_frames = 5,
	},
	{
	.desc	= "SVGA",
	.res	= HI256_RES_VGA,
	.width	= 800,
	.height	= 600,
	.fps	= 30,
	.used	= 0,
	.regs	= NULL,
	.skip_frames = 5,
	},
};
#define N_RES (ARRAY_SIZE(hi256_res))

static const struct i2c_device_id hi256_id[] = {
	{"hi256", 0},
	{}
};

static struct regval_list hi256_suspend[] = {
{0x01, 0xf1},
{0xff, 0xff},
};

static struct regval_list hi256_streaming[] = {
{0x01, 0xf0},
{0xff, 0xff},

};


static struct regval_list hi256_qcif_init[] = {

{0xff, 0xff},
};
static struct regval_list hi256_cif_init[] = {

{0xff, 0xff},
};

static struct regval_list hi256_qvga_init[] = {

{0xff, 0xff},
};

static struct regval_list hi256_vga_init[] = {
{0xff, 0xff},
};
#if 0
static struct regval_list  reg_expo_n2_seq[] = {

         {0xff, 0xff},
};
static struct regval_list  reg_expo_n1_seq[] = {

         {0xff, 0xff},
};
static struct regval_list  reg_expo_zero_seq[] = {

         {0xff, 0xff},
};
static struct regval_list  reg_expo_p1_seq[] = {

         {0xff, 0xff},
};
static struct regval_list  reg_expo_p2_seq[] = {

         {0xff, 0xff},
};
static struct regval_list  reg_color_none_seq[] = {

         {0xff, 0xff},
};
static struct regval_list  reg_color_mono_seq[] = {

         {0xff, 0xff},
};
static struct regval_list  reg_color_vivid_seq[] = {

         {0xff, 0xff},
};
static struct regval_list  reg_color_negative_seq[] = {

         {0xff, 0xff},
};
static struct regval_list  reg_color_sepia_seq[] = {

         {0xff, 0xff},
};
#endif
static struct regval_list  hi256_common[] = {
	
	{0x01, 0x01},
	{0x01, 0x03},
	{0x01, 0x01},
	{0x08, 0x0F},
	{0x0a, 0x00},


	{0x03, 0x20},
	{0x10, 0x1c},

	{0x03, 0x22},
	{0x10, 0x69},


	{0x03, 0x00},
	{0x10, 0x91},
	{0x11, 0x90},
	{0x12, 0x00},

	{0x0b, 0xaa},
	{0x0c, 0xaa},
	{0x0d, 0xaa},

	{0x20, 0x00},
	{0x21, 0x06},
	{0x22, 0x00},
	{0x23, 0x05},

	{0x24, 0x04},
	{0x25, 0xb0},
	{0x26, 0x06},
	{0x27, 0x40},

	{0x40, 0x01},
	{0x41, 0xa0},
	{0x42, 0x00},
	{0x43, 0x13},

	{0x45, 0x04},
	{0x46, 0x18},
	{0x47, 0xd8},


	{0x80, 0x2e},
	{0x81, 0x7e},
	{0x82, 0x90},
	{0x83, 0x00},
	{0x84, 0x0c},
	{0x85, 0x00},
	{0x90, 0x0a},
	{0x91, 0x0a},
	{0x92, 0x78},
	{0x93, 0x70},
	{0x94, 0x75},
	{0x95, 0x70},
	{0x96, 0xdc},
	{0x97, 0xfe},
	{0x98, 0x38},


	{0xa0, 0x43},
	{0xa2, 0x43},
	{0xa4, 0x43},
	{0xa6, 0x43},


	{0xa8, 0x48},
	{0xaa, 0x48},
	{0xac, 0x48},
	{0xae, 0x48},


	{0x99, 0x48},
	{0x9a, 0x48},
	{0x9b, 0x48},
	{0x9c, 0x48},

	{0x03, 0x02},
	{0x10, 0x00},
	{0x11, 0x00},
	{0x12, 0x03},
	{0x13, 0x03},
	{0x14, 0x00},
	{0x16, 0x00},
	{0x17, 0x8C},
	{0x18, 0x4c},
	{0x19, 0x00},
	{0x1a, 0x39},
	{0x1b, 0x00},
	{0x1c, 0x09},
	{0x1d, 0x40},
	{0x1e, 0x30},
	{0x1f, 0x10},

	{0x20, 0x77},
	{0x21, 0xde},
	{0x22, 0xa7},
	{0x23, 0x30},
	{0x24, 0x4a},
	{0x25, 0x10},
	{0x27, 0x3c},
	{0x28, 0x00},
	{0x29, 0x0c},
	{0x2a, 0x80},
	{0x2b, 0x80},
	{0x2c, 0x02},
	{0x2d, 0xa0},
	{0x2e, 0x11},
	{0x2f, 0xa1},
	{0x30, 0x05},
	{0x31, 0x99},
	{0x32, 0x00},
	{0x33, 0x00},
	{0x34, 0x22},
	{0x38, 0x88},
	{0x39, 0x88},
	{0x50, 0x20},
	{0x51, 0x00},
	{0x52, 0x01},
	{0x53, 0xc1},
	{0x54, 0x10},
	{0x55, 0x1c},
	{0x56, 0x11},
	{0x58, 0x10},
	{0x59, 0x0e},
	{0x5d, 0xa2},
	{0x5e, 0x5a},

	{0x60, 0x87},
	{0x61, 0x99},
	{0x62, 0x88},
	{0x63, 0x97},
	{0x64, 0x88},
	{0x65, 0x97},

	{0x67, 0x0c},
	{0x68, 0x0c},
	{0x69, 0x0c},
	{0x6a, 0xb4},
	{0x6b, 0xc4},
	{0x6c, 0xb5},
	{0x6d, 0xc2},
	{0x6e, 0xb5},
	{0x6f, 0xc0},
	{0x70, 0xb6},
	{0x71, 0xb8},
	{0x72, 0x89},
	{0x73, 0x96},
	{0x74, 0x89},
	{0x75, 0x96},
	{0x76, 0x89},
	{0x77, 0x96},

	{0x7c, 0x85},
	{0x7d, 0xaf},
	{0x80, 0x01},
	{0x81, 0x7f},
	{0x82, 0x13},
	{0x83, 0x24},
	{0x84, 0x7d},
	{0x85, 0x81},
	{0x86, 0x7d},
	{0x87, 0x81},
	{0x88, 0xab},
	{0x89, 0xbc},
	{0x8a, 0xac},
	{0x8b, 0xba},
	{0x8c, 0xad},
	{0x8d, 0xb8},
	{0x8e, 0xae},
	{0x8f, 0xb2},
	{0x90, 0xb3},
	{0x91, 0xb7},
	{0x92, 0x48},
	{0x93, 0x54},
	{0x94, 0x7d},
	{0x95, 0x81},
	{0x96, 0x7d},
	{0x97, 0x81},

	{0xa0, 0x02},
	{0xa1, 0x7b},
	{0xa2, 0x02},
	{0xa3, 0x7b},
	{0xa4, 0x7b},
	{0xa5, 0x02},
	{0xa6, 0x7b},
	{0xa7, 0x02},

	{0xa8, 0x85},
	{0xa9, 0x8c},
	{0xaa, 0x85},
	{0xab, 0x8c},
	{0xac, 0x10},
	{0xad, 0x16},
	{0xae, 0x10},
	{0xaf, 0x16},

	{0xb0, 0x99},
	{0xb1, 0xa3},
	{0xb2, 0xa4},
	{0xb3, 0xae},
	{0xb4, 0x9b},
	{0xb5, 0xa2},
	{0xb6, 0xa6},
	{0xb7, 0xac},
	{0xb8, 0x9b},
	{0xb9, 0x9f},
	{0xba, 0xa6},
	{0xbb, 0xaa},
	{0xbc, 0x9b},
	{0xbd, 0x9f},
	{0xbe, 0xa6},
	{0xbf, 0xaa},

	{0xc4, 0x2c},
	{0xc5, 0x43},
	{0xc6, 0x63},
	{0xc7, 0x79},

	{0xc8, 0x2d},
	{0xc9, 0x42},
	{0xca, 0x2d},
	{0xcb, 0x42},
	{0xcc, 0x64},
	{0xcd, 0x78},
	{0xce, 0x64},
	{0xcf, 0x78},
	{0xd0, 0x0a},
	{0xd1, 0x09},
	{0xd2, 0x20},
	{0xd3, 0x00},
	{0xd4, 0x0a},
	{0xd5, 0x0a},
	{0xd6, 0x78},
	{0xd7, 0x70},
	{0xe0, 0xc4},
	{0xe1, 0xc4},
	{0xe2, 0xc4},
	{0xe3, 0xc4},
	{0xe4, 0x00},
	{0xe8, 0x80},
	{0xe9, 0x40},
	{0xea, 0x7f},


	{0xf0, 0x01},
	{0xf1, 0x01},
	{0xf2, 0x01},
	{0xf3, 0x01},
	{0xf4, 0x01},
	{0x03, 0x03},
	{0x10, 0x10},
	{0x03, 0x10},
	{0x10, 0x00},
	{0x12, 0x30},
	{0x13, 0x0a},
	{0x20, 0x00},
	{0x30, 0x00},
	{0x31, 0x00},
	{0x32, 0x00},
	{0x33, 0x00},

	{0x34, 0x30},
	{0x35, 0x00},
	{0x36, 0x00},
	{0x38, 0x00},
	{0x3e, 0x58},
	{0x3f, 0x00},
	{0x40, 0x05},
	{0x41, 0x00},
	{0x48, 0x90},
	{0x60, 0x67},
	{0x61, 0x88},
	{0x62, 0x88},
	{0x63, 0x50},
	{0x64, 0x41},

	{0x66, 0x42},
	{0x67, 0x20},

	{0x6a, 0x80},
	{0x6b, 0x84},
	{0x6c, 0x80},
	{0x6d, 0x80},


	{0x03, 0x11},
	{0x10, 0x7f},
	{0x11, 0x40},
	{0x12, 0x0a},
	{0x13, 0xbb},

	{0x26, 0x31},
	{0x27, 0x34},
	{0x28, 0x0f},
	{0x29, 0x10},
	{0x2b, 0x30},
	{0x2c, 0x32},


	{0x30, 0x70},
	{0x31, 0x10},
	{0x32, 0x58},
	{0x33, 0x09},
	{0x34, 0x06},
	{0x35, 0x03},


	{0x36, 0x70},
	{0x37, 0x18},
	{0x38, 0x58},
	{0x39, 0x09},
	{0x3a, 0x06},
	{0x3b, 0x03},


	{0x3c, 0x80},
	{0x3d, 0x18},
	{0x3e, 0x80},
	{0x3f, 0x0c},
	{0x40, 0x09},
	{0x41, 0x06},

	{0x42, 0x80},
	{0x43, 0x18},
	{0x44, 0x80},
	{0x45, 0x12},
	{0x46, 0x10},
	{0x47, 0x10},

	{0x48, 0x90},
	{0x49, 0x40},
	{0x4a, 0x9b},
	{0x4b, 0x13},
	{0x4c, 0x28},
	{0x4d, 0x57},

	{0x4e, 0x80},
	{0x4f, 0x30},
	{0x50, 0xc1},
	{0x51, 0x13},
	{0x52, 0xdd},
	{0x53, 0x13},

	{0x54, 0x11},
	{0x55, 0x17},
	{0x56, 0x20},
	{0x57, 0x01},
	{0x58, 0x00},
	{0x59, 0x00},

	{0x5a, 0x1f},
	{0x5b, 0x00},
	{0x5c, 0x00},

	{0x60, 0x3f},
	{0x62, 0x60},
	{0x70, 0x06},
	{0x03, 0x12},
	{0x20, 0x0f},
	{0x21, 0x0f},

	{0x25, 0x00},

	{0x28, 0x00},
	{0x29, 0x00},
	{0x2a, 0x00},

	{0x30, 0x50},
	{0x31, 0x18},
	{0x32, 0x32},
	{0x33, 0x40},
	{0x34, 0x50},
	{0x35, 0x70},
	{0x36, 0xa0},


	{0x40, 0xa0},
	{0x41, 0x40},
	{0x42, 0xa0},
	{0x43, 0x90},
	{0x44, 0x90},
	{0x45, 0x80},


	{0x46, 0xb0},
	{0x47, 0x55},
	{0x48, 0xa0},
	{0x49, 0x90},
	{0x4a, 0x90},
	{0x4b, 0x80},


	{0x4c, 0xb0},
	{0x4d, 0x40},
	{0x4e, 0x90},
	{0x4f, 0x90},
	{0x50, 0xa0},
	{0x51, 0x80},


	{0x52, 0xb0},
	{0x53, 0x40},
	{0x54, 0x90},
	{0x55, 0x90},
	{0x56, 0xa0},
	{0x57, 0x80},


	{0x58, 0x60},
	{0x59, 0x40},
	{0x5a, 0xd0},
	{0x5b, 0xd0},
	{0x5c, 0xc0},
	{0x5d, 0x9b},


	{0x5e, 0x70},
	{0x5f, 0x40},
	{0x60, 0xe0},
	{0x61, 0xe0},
	{0x62, 0xe0},
	{0x63, 0xb4},

	{0x70, 0x15},
	{0x71, 0x01},
	{0x73, 0x01},
	{0x90, 0x5d},
	{0x91, 0x88},
	{0x98, 0x7d},
	{0x99, 0x28},
	{0x9A, 0x14},
	{0x9B, 0xc8},
	{0x9C, 0x02},
	{0x9D, 0x1e},
	{0x9E, 0x28},
	{0x9F, 0x07},
	{0xA0, 0x32},
	{0xA4, 0x04},
	{0xA5, 0x0e},
	{0xA6, 0x0c},
	{0xA7, 0x04},
	{0xA8, 0x3c},

	{0xAA, 0x14},
	{0xAB, 0x11},
	{0xAC, 0x0f},
	{0xAD, 0x16},
	{0xAE, 0x15},
	{0xAF, 0x14},

	{0xB1, 0xaa},
	{0xB2, 0x96},
	{0xB3, 0x28},
	{0xB8, 0x78},
	{0xB9, 0xa0},
	{0xBA, 0xb4},
	{0xBB, 0x14},
	{0xBC, 0x14},
	{0xBD, 0x14},
	{0xBE, 0x64},
	{0xBF, 0x64},
	{0xC0, 0x64},
	{0xC1, 0x64},
	{0xC2, 0x04},
	{0xC3, 0x03},
	{0xC4, 0x0c},
	{0xC5, 0x30},
	{0xC6, 0x2a},
	{0xD0, 0x0c},
	{0xD1, 0x80},
	{0xD2, 0x67},
	{0xD3, 0x00},
	{0xD4, 0x00},
	{0xD5, 0x02},
	{0xD6, 0xff},
	{0xD7, 0x18},



	{0x03, 0x13},
	{0x10, 0xcb},
	{0x11, 0x7b},
	{0x12, 0x07},
	{0x14, 0x00},

	{0x20, 0x15},
	{0x21, 0x13},
	{0x22, 0x33},
	{0x23, 0x05},
	{0x24, 0x09},

	{0x25, 0x0a},

	{0x26, 0x18},
	{0x27, 0x30},
	{0x29, 0x12},
	{0x2a, 0x50},


	{0x2b, 0x00},
	{0x2c, 0x00},
	{0x25, 0x06},
	{0x2d, 0x0c},
	{0x2e, 0x12},
	{0x2f, 0x12},


	{0x50, 0x10},
	{0x51, 0x14},
	{0x52, 0x12},
	{0x53, 0x0c},
	{0x54, 0x0f},
	{0x55, 0x0c},


	{0x56, 0x10},
	{0x57, 0x13},
	{0x58, 0x12},
	{0x59, 0x0c},
	{0x5a, 0x0f},
	{0x5b, 0x0c},


	{0x5c, 0x25},
	{0x5d, 0x25},
	{0x5e, 0x25},
	{0x5f, 0x25},
	{0x60, 0x25},
	{0x61, 0x25},


	{0x62, 0x25},
	{0x63, 0x25},
	{0x64, 0x25},
	{0x65, 0x25},
	{0x66, 0x25},
	{0x67, 0x25},


	{0x68, 0x07},
	{0x69, 0x07},
	{0x6a, 0x07},
	{0x6b, 0x05},
	{0x6c, 0x05},
	{0x6d, 0x05},


	{0x6e, 0x07},
	{0x6f, 0x07},
	{0x70, 0x07},
	{0x71, 0x05},
	{0x72, 0x05},
	{0x73, 0x05},


	{0x80, 0xfd},
	{0x81, 0x1f},
	{0x82, 0x05},
	{0x83, 0x31},

	{0x90, 0x05},
	{0x91, 0x05},
	{0x92, 0x33},
	{0x93, 0x30},
	{0x94, 0x03},
	{0x95, 0x14},
	{0x97, 0x20},
	{0x99, 0x20},

	{0xa0, 0x01},
	{0xa1, 0x02},
	{0xa2, 0x01},
	{0xa3, 0x02},
	{0xa4, 0x05},
	{0xa5, 0x05},
	{0xa6, 0x07},
	{0xa7, 0x08},
	{0xa8, 0x07},
	{0xa9, 0x08},
	{0xaa, 0x07},
	{0xab, 0x08},


	{0xb0, 0x22},
	{0xb1, 0x2a},
	{0xb2, 0x28},
	{0xb3, 0x22},
	{0xb4, 0x2a},
	{0xb5, 0x28},


	{0xb6, 0x22},
	{0xb7, 0x2a},
	{0xb8, 0x28},
	{0xb9, 0x22},
	{0xba, 0x2a},
	{0xbb, 0x28},


	{0xbc, 0x25},
	{0xbd, 0x2a},
	{0xbe, 0x27},
	{0xbf, 0x25},
	{0xc0, 0x2a},
	{0xc1, 0x27},


	{0xc2, 0x1e},
	{0xc3, 0x24},
	{0xc4, 0x20},
	{0xc5, 0x1e},
	{0xc6, 0x24},
	{0xc7, 0x20},


	{0xc8, 0x18},
	{0xc9, 0x20},
	{0xca, 0x1e},
	{0xcb, 0x18},
	{0xcc, 0x20},
	{0xcd, 0x1e},


	{0xce, 0x18},
	{0xcf, 0x20},
	{0xd0, 0x1e},
	{0xd1, 0x18},
	{0xd2, 0x20},
	{0xd3, 0x1e},
	{0x03, 0x14},
	{0x10, 0x11},

	{0x14, 0x80},
	{0x15, 0x80},
	{0x16, 0x80},
	{0x17, 0x80},
	{0x18, 0x80},
	{0x19, 0x80},

	{0x20, 0x80},

	{0x21, 0x80},

	{0x22, 0x80},
	{0x23, 0x80},
	{0x24, 0x80},

	{0x30, 0xc8},
	{0x31, 0x2b},
	{0x32, 0x00},
	{0x33, 0x00},
	{0x34, 0x90},

	{0x40, 0x32},
	{0x50, 0x21},
	{0x60, 0x19},
	{0x70, 0x21},
	{0x03, 0x15},
	{0x10, 0x0f},



	{0x14, 0x46},
	{0x15, 0x36},
	{0x16, 0x26},
	{0x17, 0x2f},


	{0x30, 0x8f},
	{0x31, 0x59},
	{0x32, 0x0a},
	{0x33, 0x15},
	{0x34, 0x5b},
	{0x35, 0x06},
	{0x36, 0x07},
	{0x37, 0x40},
	{0x38, 0x87},


	{0x40, 0x94},
	{0x41, 0x20},
	{0x42, 0x89},
	{0x43, 0x84},
	{0x44, 0x03},
	{0x45, 0x01},
	{0x46, 0x88},
	{0x47, 0x9c},
	{0x48, 0x28},


	{0x50, 0x02},
	{0x51, 0x82},
	{0x52, 0x00},
	{0x53, 0x07},
	{0x54, 0x11},
	{0x55, 0x98},
	{0x56, 0x00},
	{0x57, 0x0b},
	{0x58, 0x8b},

	{0x80, 0x03},
	{0x85, 0x40},
	{0x87, 0x02},
	{0x88, 0x00},
	{0x89, 0x00},
	{0x8a, 0x00},
	{0x03, 0x16},
	{0x10, 0x31},
	{0x18, 0x5e},
	{0x19, 0x5d},
	{0x1a, 0x0e},
	{0x1b, 0x01},
	{0x1c, 0xdc},
	{0x1d, 0xfe},


	{0x30, 0x00},
	{0x31, 0x0a},
	{0x32, 0x1f},
	{0x33, 0x33},
	{0x34, 0x53},
	{0x35, 0x6c},
	{0x36, 0x81},
	{0x37, 0x94},
	{0x38, 0xa4},
	{0x39, 0xb3},
	{0x3a, 0xc0},
	{0x3b, 0xcb},
	{0x3c, 0xd5},
	{0x3d, 0xde},
	{0x3e, 0xe6},
	{0x3f, 0xee},
	{0x40, 0xf5},
	{0x41, 0xfc},
	{0x42, 0xff},

	{0x50, 0x00},
	{0x51, 0x08},
	{0x52, 0x1e},
	{0x53, 0x36},
	{0x54, 0x5a},
	{0x55, 0x75},
	{0x56, 0x8d},
	{0x57, 0xa1},
	{0x58, 0xb2},
	{0x59, 0xbe},
	{0x5a, 0xc9},
	{0x5b, 0xd2},
	{0x5c, 0xdb},
	{0x5d, 0xe3},
	{0x5e, 0xeb},
	{0x5f, 0xf0},
	{0x60, 0xf5},
	{0x61, 0xf7},
	{0x62, 0xf8},

	{0x70, 0x00},
	{0x71, 0x08},
	{0x72, 0x17},
	{0x73, 0x2f},
	{0x74, 0x53},
	{0x75, 0x6c},
	{0x76, 0x81},
	{0x77, 0x94},
	{0x78, 0xa4},
	{0x79, 0xb3},
	{0x7a, 0xc0},
	{0x7b, 0xcb},
	{0x7c, 0xd5},
	{0x7d, 0xde},
	{0x7e, 0xe6},
	{0x7f, 0xee},
	{0x80, 0xf4},
	{0x81, 0xfa},
	{0x82, 0xff},
	/////// PAGE 16 END ///////

	/////// PAGE 17 START ///////
	{0x03, 0x17},
	{0x10, 0xf7},

	/////// PAGE 17 END ///////

	/////// PAGE 20 START ///////
	{0x03, 0x20},
	{0x11, 0x1c},
	{0x18, 0x30},
	{0x1a, 0x08},
	{0x20, 0x01},
	{0x21, 0x30},
	{0x22, 0x10},
	{0x23, 0x00},
	{0x24, 0x00},

	{0x28, 0xe7},
	{0x29, 0x0d},
	{0x2a, 0xff},
	{0x2b, 0x34},
	{0x2c, 0xc2},
	{0x2d, 0xcf},
	{0x2e, 0x33},
	{0x30, 0x78},
	{0x32, 0x03},
	{0x33, 0x2e},
	{0x34, 0x30},
	{0x35, 0xd4},
	{0x36, 0xfe},
	{0x37, 0x32},
	{0x38, 0x04},
	{0x39, 0x22},
	{0x3a, 0xde},
	{0x3b, 0x22},
	{0x3c, 0xde},

	{0x50, 0x45},
	{0x51, 0x88},

	{0x56, 0x03},
	{0x57, 0xf7},
	{0x58, 0x14},
	{0x59, 0x88},
	{0x5a, 0x04},

	//{0x60, 0xaa
	//{0x61, 0xaa
	//{0x62, 0xaa
	//{0x63, 0xaa
	//{0x64, 0xaa
	//{0x65, 0xaa
	//{0x66, 0xab
	//{0x67, 0xEa
	//{0x68, 0xab
	//{0x69, 0xEa
	//{0x6a, 0xaa
	//{0x6b, 0xaa
	//{0x6c, 0xaa
	//{0x6d, 0xaa
	//{0x6e, 0xaa
	//{0x6f, 0xaa

	{0x60, 0x55},
	{0x61, 0x55},
	{0x62, 0x6a},
	{0x63, 0xa9},
	{0x64, 0x6a},
	{0x65, 0xa9},
	{0x66, 0x6a},
	{0x67, 0xa9},
	{0x68, 0x6b},
	{0x69, 0xE9},
	{0x6a, 0x6a},
	{0x6b, 0xa9},
	{0x6c, 0x6a},
	{0x6d, 0xa9},
	{0x6e, 0x55},
	{0x6f, 0x55},
	{0x70, 0x76},
	{0x76, 0x43},
	{0x77, 0xe2},
	{0x78, 0x23},
	{0x79, 0x42},
	{0x7a, 0x23},
	{0x7b, 0x22},
	{0x7d, 0x23},

	{0x83, 0x01}, //EXP Normal 33.33 fps 
	{0x84, 0x17}, 
	{0x85, 0x7e}, 
	{0x86, 0x01}, //EXPMin 4800.00 fps
	{0x87, 0xc2}, 
	{0x88, 0x03}, //EXP Max 10.00 fps 
	{0x89, 0xa3}, 
	{0x8a, 0xa4}, 
	{0x8B, 0x5d}, //EXP100 
	{0x8C, 0x2a}, 
	{0x8D, 0x4d}, //EXP120 
	{0x8E, 0x58}, 
	{0x9c, 0x15}, //EXP Limit 400.00 fps 
	{0x9d, 0x18}, 
	{0x9e, 0x01}, //EXP Unit 
	{0x9f, 0xc2}, 

	{0xb0, 0x18},
	{0xb1, 0x14},
	{0xb2, 0x80},
	{0xb3, 0x18},
	{0xb4, 0x1a},
	{0xb5, 0x44},
	{0xb6, 0x2f},
	{0xb7, 0x28},
	{0xb8, 0x25},
	{0xb9, 0x22},
	{0xba, 0x21},
	{0xbb, 0x20},
	{0xbc, 0x1f},
	{0xbd, 0x1f},

	{0xc8, 0x80},
	{0xc9, 0x40},
	{0x03, 0x22},
	{0x10, 0xfd},
	{0x11, 0x2e},
	{0x19, 0x01},
	{0x20, 0x30},
	{0x21, 0x80},
	{0x24, 0x01},
	{0x30, 0x80},
	{0x31, 0x80},
	{0x38, 0x11},
	{0x39, 0x34},
	{0x40, 0xf7},
	{0x41, 0x77},
	{0x42, 0x55},
	{0x43, 0xf7},
	{0x44, 0x55},
	{0x45, 0x44},
	{0x46, 0x00},
	{0x50, 0xb2},
	{0x51, 0x81},
	{0x52, 0x98},
	{0x80, 0x40},
	{0x81, 0x20},
	{0x82, 0x3e},
	{0x83, 0x5e},
	{0x84, 0x10},
	{0x85, 0x5e},
	{0x86, 0x22},

	{0x87, 0x40},
	{0x88, 0x30},
	{0x89, 0x3f},
	{0x8a, 0x28},

	{0x8b, 0x40},
	{0x8c, 0x33},
	{0x8d, 0x39},
	{0x8e, 0x30},

	{0x8f, 0x53},
	{0x90, 0x52},
	{0x91, 0x51},
	{0x92, 0x4e},
	{0x93, 0x4a},
	{0x94, 0x45},
	{0x95, 0x3d},
	{0x96, 0x31},
	{0x97, 0x28},
	{0x98, 0x24},
	{0x99, 0x20},
	{0x9a, 0x20},

	{0x9b, 0xcc},
	{0x9c, 0xcc},
	{0x9d, 0x48},
	{0x9e, 0x38},
	{0x9f, 0x30},

	{0xa0, 0x60},
	{0xa1, 0x34},
	{0xa2, 0x6f},
	{0xa3, 0xff},

	{0xa4, 0x14},
	{0xa5, 0x2c},
	{0xa6, 0xcf},

	{0xad, 0x40},
	{0xae, 0x4a},

	{0xaf, 0x28},
	{0xb0, 0x26},

	{0xb1, 0x00},
	{0xb4, 0xea},
	{0xb8, 0xa0},
	{0xb9, 0x00},

	{0x03, 0x48},
	{0x70, 0x03},
	{0x71, 0x78}, //Pllx1
	{0x72, 0x85},   // Full size & preview2 0x81, HBIN+preview1 0x85
	{0x73, 0x10},
	{0x70, 0x85},
	
	{0x03, 0x48},
	{0x03, 0x48},
	{0x03, 0x48},
	{0x03, 0x48},
	{0x70, 0x95},

	{0x10, 0x1c},
	{0x11, 0x10},
	{0x12, 0x00},
	{0x14, 0x00},
	{0x16, 0x04},
	{0x18, 0x80},
	{0x19, 0x00},
	{0x1a, 0xa0},
	{0x1b, 0x0d},
	{0x1c, 0x01},
	{0x1d, 0x0a},
	{0x1e, 0x01},
	{0x1f, 0x0b},
	{0x23, 0x01},
	{0x24, 0x1e},
	{0x25, 0x00},
	{0x26, 0x00},
	{0x27, 0x08},
	{0x28, 0x00},
	{0x30, 0x06},
	{0x31, 0x40},

	{0x32, 0x13},
	{0x33, 0x0c},
	{0x34, 0x04},
	{0x35, 0x06},
	{0x36, 0x01},
	{0x37, 0x06},
	{0x39, 0x4f},

	{0x03, 0x20},
	{0x10, 0x9c},

	{0x03, 0x22},
	{0x10, 0xe9},

	{0x03, 0x00},

	{0x03, 0x00},
	{0x03, 0x00},
	{0x03, 0x00},
	{0x03, 0x00},
	{0x03, 0x00},
	{0x03, 0x00},
	{0x03, 0x00},
	{0x03, 0x00},
	{0x03, 0x00},
	{0x03, 0x00},
	{0x03, 0x48},

	{0x03, 0x00},

	{0x03, 0x00},
	//{0x01, 0x00},
	{0x0a, 0x00},
	{0x08, 0x0f},
	{0x00, 0x00},
	{0xff, 0xff},
	
};


#endif

